<?xml version="1.1" encoding="UTF-8"?>
<!-- salt:4bcc129c-4bc5-4464-be8c-63320c5b8b84 -->
<metadata name="productCatalog_xform" path="/shared/examples/productCatalog_xform" type="PROCEDURE" subtype="TRANSFORM_PROCEDURE" changeToken="0">
  <parameters>
    <parameter name="outputs" direction="OUT" nullable="false">
      <datatype name="outputs" type="TABLE" refId="256">
        <element name="ProductID">
          <datatype name="NUMERIC" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
        </element>
        <element name="ProductName">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="CategoryID">
          <datatype name="NUMERIC" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
        </element>
        <element name="CategoryName">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="ProductDescription">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="SerialNumber">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
        <element name="UnitPrice">
          <datatype name="DECIMAL" type="DECIMAL" maxDigits="32" maxFractionalDigits="6"/>
        </element>
        <element name="ReorderLevel">
          <datatype name="NUMERIC" type="DECIMAL" maxDigits="32" maxFractionalDigits="0"/>
        </element>
        <element name="LeadTime">
          <datatype name="VARCHAR" type="STRING" maxLength="32768"/>
        </element>
      </datatype>
    </parameter>
  </parameters>
  <security>
    <owner user="admin" domain="composite"/>
    <privilege group="all" domain="composite" privileges="READ EXECUTE"/>
  </security>
  <dependency target="/shared/examples/ds_XML/productCatalog.xml" type="TREE">
    <datatype name="Tree" type="TREE" refId="257"></datatype>
  </dependency>
  <attribute name="creationDate" type="LONG">1398448186761</attribute>
  <attribute name="creatorUserDomain" type="STRING">composite</attribute>
  <attribute name="creatorUserName" type="STRING">admin</attribute>
  <attribute name="lastModifiedDate" type="LONG">1632292514210</attribute>
  <attribute name="lastModifiedUserDomain" type="STRING">composite</attribute>
  <attribute name="lastModifiedUserName" type="STRING">admin</attribute>
  <attribute name="transformModel" type="BYTE_ARRAY">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</attribute>
  <attribute name="transformSource" type="STRING">declare copy-namespaces no-preserve,inherit;
declare namespace xquery =  &quot;http://compositesw.com/transform/xquery&quot;;
declare namespace custom =  &quot;http://compositesw.com/transform/custom&quot;;
declare namespace xs =  &quot;http://www.w3.org/2001/XMLSchema&quot;;
declare namespace ext2 =  &quot;http://www.compositesw.com/extensions2&quot;;
declare namespace sql =  &quot;http://compositesw.com/transform/sql&quot;;

declare function local:productCatalog_xml( )
{
  (:invoke resource /shared/examples/ds_XML/&quot;&quot;productCatalog.xml&quot;&quot; :)
  let $var4 := doc(&quot;/shared/examples/ds_XML/&quot;&quot;productCatalog.xml&quot;&quot;&quot;)/catalog
  return
    $var4
};

declare function local:cast2( $ProductName)
{
  fn:substring($ProductName, 0 ,32769)
};

declare function local:cast( $CategoryName)
{
  fn:substring($CategoryName, 0 ,32769)
};

declare function local:cast3( $ProductDescription)
{
  fn:substring($ProductDescription, 0 ,32769)
};

declare function local:cast4( $SerialNumber)
{
  fn:substring($SerialNumber, 0 ,32769)
};

declare function local:cast5( $LeadTime)
{
  fn:substring($LeadTime, 0 ,32769)
};

let $nodes := 
(
  let $var4:= local:productCatalog_xml()
  return
  (
    for $var0 at $counter1 in $var4/category
    return 
      if (fn:not($counter1 &lt;= 2147483647 and fn:true()))
      then ()
      else 
        for $var3 at $counter2 in $var0/products/product
        return 
          if (fn:not($counter2 &lt;= 2147483647 and fn:true()))
          then ()
          else 
            element outputs
            {
              (
                element ProductID
                {
                  if (fn:string-length(fn:string($var3/ProductID)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/ProductID/text()
                }
                ,
                let $var8 := $var3/ProductName/text()
                let $var7:= local:cast2(fn:data($var8))
                return
                element ProductName
                {
                  if (fn:string-length(fn:string($var7)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var7
                }
                ,
                element CategoryID
                {
                  if (fn:string-length(fn:string($var0/CategoryID)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var0/CategoryID/text()
                }
                ,
                let $var12 := $var0/CategoryName/text()
                let $var11:= local:cast(fn:data($var12))
                return
                element CategoryName
                {
                  if (fn:string-length(fn:string($var11)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var11
                }
                ,
                let $var15 := $var3/ProductDescription/text()
                let $var14:= local:cast3(fn:data($var15))
                return
                element ProductDescription
                {
                  if (fn:string-length(fn:string($var14)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var14
                }
                ,
                let $var18 := $var3/SerialNumber/text()
                let $var17:= local:cast4(fn:data($var18))
                return
                element SerialNumber
                {
                  if (fn:string-length(fn:string($var17)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var17
                }
                ,
                element UnitPrice
                {
                  if (fn:string-length(fn:string($var3/UnitPrice)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/UnitPrice/text()
                }
                ,
                element ReorderLevel
                {
                  if (fn:string-length(fn:string($var3/ReorderLevel)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var3/ReorderLevel/text()
                }
                ,
                let $var23 := $var3/LeadTime/text()
                let $var22:= local:cast5(fn:data($var23))
                return
                element LeadTime
                {
                  if (fn:string-length(fn:string($var22)) &gt; 0)
                  then
                    ()
                  else
                    attribute xsi:nil {&quot;true&quot;}
                  ,
                  $var22
                }
              )
            }
    ,
    let $counter := count($var4/category/products/product)
    return
      if ($counter &gt;= 0) then
      ()
      else 
        for $k in (1 to ( 0 - $counter))
        return
          element outputs
          {
            (
              element ProductID
              {
              }
              ,
              element ProductName
              {
              }
              ,
              element CategoryID
              {
              }
              ,
              element CategoryName
              {
              }
              ,
              element ProductDescription
              {
              }
              ,
              element SerialNumber
              {
              }
              ,
              element UnitPrice
              {
              }
              ,
              element ReorderLevel
              {
              }
              ,
              element LeadTime
              {
              }
            )
          }
  )
)
return
$nodes</attribute>
</metadata>